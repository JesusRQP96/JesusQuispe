{
  "hash": "b2f7760a4939cd1797022972af3b0e29",
  "result": {
    "markdown": "---\ntitle: \"Aprendizaje automatico usando Tidymodels\"\nsubtitle: \"Machine learning & Quantitative finance\"\ndescription: |\n  Description of how to use tidymodels to training Machine learning models.\ndate: \"2021-06-10\"\nimage: \"./fitted_options.jpg\"\ncategories: [Quantitative finance, Machine Learning]\nexecute:\n  message: false\n  warning: false\nformat: \n  html:\n    toc: true\nengine: knitr\n---\n\n\n# Aplicacion de Machine learning empleando Tidymodels\n\n## Carga de paquetes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(gt)\n```\n:::\n\n\n## Modelo black- sholes\n\nUno de los modelos clasicos para llevar acabo el pricing de opciones es el modelo black-sholes el cual tipicamente plantea la siguiente entidad :\n\n$$ C(S_0,t) = S_0 N(d_1) - Ke^{-r(T-t)}N(d_2)$$\n\n$$ d_1 =     \\frac{(ln\\frac{S_{0}}{K} + (r +\\frac{σ^2}{2} )(T-t))}{σ    \\sqrt{T-t}} $$\n\n$$d_2 = d_1 - σ \\sqrt{T-t}$$\n\nDonde:<br>\n\n-   $S_0$: Precio del subyacente (Stock Price)<br>\n-   $C(S0,t)$: Price of the Call Option<br>\n-   $K$: Exercise Price<br>\n-   $(T−t)$: Tiempo de maduracion, donde T es la fecha de ejercicio(Time to Maturity, where T is Exercise Date)<br>\n-   $σ$: Volatilidad subyacente (Underlying Volatility (a standard deviation of log returns))<br>\n-   $r$: Tasa de interes libre de riesgo (Risk-free Interest Rate (i.e., T-bill Rate))<br>\n\nEsta ecuacion puede ser formulada en R del siguiente modo :\n\n\n::: {.cell}\n\n```{.r .cell-code}\nblack_scholes_price <- function(S, K = 70, r = 0, T = 1, sigma = 0.2) {\n  \n  d1     <- (log(S / K) + (r + sigma^2 / 2) * T) / (sigma * sqrt(T))\n  d2     <-  d1 - sigma * sqrt(T)\n  price  <-  S * pnorm(d1) - K * exp(-r * T) * pnorm(d2)\n  \n  return(price)\n}\n```\n:::\n\n\nEmpleando la anterior expresion, podemos simular precios de opciones;asi como una base de datos de sus determinantes. Dado lo anterior, tendremos un escenario perfecto para llevar acabo metodologias asociadas al aprendizaje automatico o ML ya que podriamos calcular el predecir el precio de una opcion financiera . Asi partimos simulando la base de datos necesaria para el problema de regresion que se nos presenta\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(420)\n\noption_prices <- expand_grid(\n  S = 40:50,\n  K = 20:40,\n  r = seq(from = 0, to = 0.03, by = 0.01),\n  T = seq(from = 3 / 12, to = 1.5, by = 1 / 12),\n  sigma = seq(from = 0.1, to = 0.3, by = 0.1)\n) |>\n  mutate(\n    black_scholes = black_scholes_price(S, K, r, T, sigma),\n    observed_price = map_dbl(\n      black_scholes,\n      function(x) x + rnorm(1, sd = 0.15)\n    )\n  )\n\n  option_prices |> \n  head(10)  |>\n  gt() \n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"agqrsapykb\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#agqrsapykb table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#agqrsapykb thead, #agqrsapykb tbody, #agqrsapykb tfoot, #agqrsapykb tr, #agqrsapykb td, #agqrsapykb th {\n  border-style: none;\n}\n\n#agqrsapykb p {\n  margin: 0;\n  padding: 0;\n}\n\n#agqrsapykb .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#agqrsapykb .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#agqrsapykb .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#agqrsapykb .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#agqrsapykb .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#agqrsapykb .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#agqrsapykb .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#agqrsapykb .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#agqrsapykb .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#agqrsapykb .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#agqrsapykb .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#agqrsapykb .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#agqrsapykb .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#agqrsapykb .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#agqrsapykb .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#agqrsapykb .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#agqrsapykb .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#agqrsapykb .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#agqrsapykb .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#agqrsapykb .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#agqrsapykb .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#agqrsapykb .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#agqrsapykb .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#agqrsapykb .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#agqrsapykb .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#agqrsapykb .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#agqrsapykb .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#agqrsapykb .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#agqrsapykb .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#agqrsapykb .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#agqrsapykb .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#agqrsapykb .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#agqrsapykb .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#agqrsapykb .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#agqrsapykb .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#agqrsapykb .gt_left {\n  text-align: left;\n}\n\n#agqrsapykb .gt_center {\n  text-align: center;\n}\n\n#agqrsapykb .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#agqrsapykb .gt_font_normal {\n  font-weight: normal;\n}\n\n#agqrsapykb .gt_font_bold {\n  font-weight: bold;\n}\n\n#agqrsapykb .gt_font_italic {\n  font-style: italic;\n}\n\n#agqrsapykb .gt_super {\n  font-size: 65%;\n}\n\n#agqrsapykb .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#agqrsapykb .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#agqrsapykb .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#agqrsapykb .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#agqrsapykb .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#agqrsapykb .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#agqrsapykb .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"S\">S</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"K\">K</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"r\">r</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"T\">T</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"sigma\">sigma</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"black_scholes\">black_scholes</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"observed_price\">observed_price</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"S\" class=\"gt_row gt_right\">40</td>\n<td headers=\"K\" class=\"gt_row gt_right\">20</td>\n<td headers=\"r\" class=\"gt_row gt_right\">0</td>\n<td headers=\"T\" class=\"gt_row gt_right\">0.2500000</td>\n<td headers=\"sigma\" class=\"gt_row gt_right\">0.1</td>\n<td headers=\"black_scholes\" class=\"gt_row gt_right\">20.00000</td>\n<td headers=\"observed_price\" class=\"gt_row gt_right\">20.04016</td></tr>\n    <tr><td headers=\"S\" class=\"gt_row gt_right\">40</td>\n<td headers=\"K\" class=\"gt_row gt_right\">20</td>\n<td headers=\"r\" class=\"gt_row gt_right\">0</td>\n<td headers=\"T\" class=\"gt_row gt_right\">0.2500000</td>\n<td headers=\"sigma\" class=\"gt_row gt_right\">0.2</td>\n<td headers=\"black_scholes\" class=\"gt_row gt_right\">20.00000</td>\n<td headers=\"observed_price\" class=\"gt_row gt_right\">19.85949</td></tr>\n    <tr><td headers=\"S\" class=\"gt_row gt_right\">40</td>\n<td headers=\"K\" class=\"gt_row gt_right\">20</td>\n<td headers=\"r\" class=\"gt_row gt_right\">0</td>\n<td headers=\"T\" class=\"gt_row gt_right\">0.2500000</td>\n<td headers=\"sigma\" class=\"gt_row gt_right\">0.3</td>\n<td headers=\"black_scholes\" class=\"gt_row gt_right\">20.00000</td>\n<td headers=\"observed_price\" class=\"gt_row gt_right\">20.08943</td></tr>\n    <tr><td headers=\"S\" class=\"gt_row gt_right\">40</td>\n<td headers=\"K\" class=\"gt_row gt_right\">20</td>\n<td headers=\"r\" class=\"gt_row gt_right\">0</td>\n<td headers=\"T\" class=\"gt_row gt_right\">0.3333333</td>\n<td headers=\"sigma\" class=\"gt_row gt_right\">0.1</td>\n<td headers=\"black_scholes\" class=\"gt_row gt_right\">20.00000</td>\n<td headers=\"observed_price\" class=\"gt_row gt_right\">19.95319</td></tr>\n    <tr><td headers=\"S\" class=\"gt_row gt_right\">40</td>\n<td headers=\"K\" class=\"gt_row gt_right\">20</td>\n<td headers=\"r\" class=\"gt_row gt_right\">0</td>\n<td headers=\"T\" class=\"gt_row gt_right\">0.3333333</td>\n<td headers=\"sigma\" class=\"gt_row gt_right\">0.2</td>\n<td headers=\"black_scholes\" class=\"gt_row gt_right\">20.00000</td>\n<td headers=\"observed_price\" class=\"gt_row gt_right\">20.05970</td></tr>\n    <tr><td headers=\"S\" class=\"gt_row gt_right\">40</td>\n<td headers=\"K\" class=\"gt_row gt_right\">20</td>\n<td headers=\"r\" class=\"gt_row gt_right\">0</td>\n<td headers=\"T\" class=\"gt_row gt_right\">0.3333333</td>\n<td headers=\"sigma\" class=\"gt_row gt_right\">0.3</td>\n<td headers=\"black_scholes\" class=\"gt_row gt_right\">20.00003</td>\n<td headers=\"observed_price\" class=\"gt_row gt_right\">19.92282</td></tr>\n    <tr><td headers=\"S\" class=\"gt_row gt_right\">40</td>\n<td headers=\"K\" class=\"gt_row gt_right\">20</td>\n<td headers=\"r\" class=\"gt_row gt_right\">0</td>\n<td headers=\"T\" class=\"gt_row gt_right\">0.4166667</td>\n<td headers=\"sigma\" class=\"gt_row gt_right\">0.1</td>\n<td headers=\"black_scholes\" class=\"gt_row gt_right\">20.00000</td>\n<td headers=\"observed_price\" class=\"gt_row gt_right\">19.91722</td></tr>\n    <tr><td headers=\"S\" class=\"gt_row gt_right\">40</td>\n<td headers=\"K\" class=\"gt_row gt_right\">20</td>\n<td headers=\"r\" class=\"gt_row gt_right\">0</td>\n<td headers=\"T\" class=\"gt_row gt_right\">0.4166667</td>\n<td headers=\"sigma\" class=\"gt_row gt_right\">0.2</td>\n<td headers=\"black_scholes\" class=\"gt_row gt_right\">20.00000</td>\n<td headers=\"observed_price\" class=\"gt_row gt_right\">19.93092</td></tr>\n    <tr><td headers=\"S\" class=\"gt_row gt_right\">40</td>\n<td headers=\"K\" class=\"gt_row gt_right\">20</td>\n<td headers=\"r\" class=\"gt_row gt_right\">0</td>\n<td headers=\"T\" class=\"gt_row gt_right\">0.4166667</td>\n<td headers=\"sigma\" class=\"gt_row gt_right\">0.3</td>\n<td headers=\"black_scholes\" class=\"gt_row gt_right\">20.00023</td>\n<td headers=\"observed_price\" class=\"gt_row gt_right\">19.55791</td></tr>\n    <tr><td headers=\"S\" class=\"gt_row gt_right\">40</td>\n<td headers=\"K\" class=\"gt_row gt_right\">20</td>\n<td headers=\"r\" class=\"gt_row gt_right\">0</td>\n<td headers=\"T\" class=\"gt_row gt_right\">0.5000000</td>\n<td headers=\"sigma\" class=\"gt_row gt_right\">0.1</td>\n<td headers=\"black_scholes\" class=\"gt_row gt_right\">20.00000</td>\n<td headers=\"observed_price\" class=\"gt_row gt_right\">19.88493</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\nInmediatamente procedemos a establecer el conjunto de datos de entrenamiento y testeo. Asi como establecemos la metodologia de V-fold validacion cruzada sobre el conjunto de datos de entrenamiento\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 40 -60% \nsplit         <- initial_split(option_prices, prop = 0.40)\noption_train  <- training(split)\noption_test   <- testing(split)\n\n\n\n\nset.seed(123)\noption_folds <- vfold_cv(option_train, v = 20)\n```\n:::\n\n\n## Definicion del predictor\n\nLuego procedemos a plantear los potenciales predictores del precio de la opcion; asi como el procesamiento basico de los mismo o **Feature engineering** .Para ello empleamos una 'recipe'\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrec.option <- recipe(observed_price ~ .,\n              data = option_prices\n              ) |>\n  step_rm(black_scholes) |>\n  step_normalize(all_predictors())\n```\n:::\n\n\n## Definicion del modelo o Engine\n\nDefinimos el set de modelos que emplearemos y evaluaremos su performance\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmars_model <- mars(  num_terms = tune(),\n                       prod_degree = tune(),\n                       prune_method = tune())  |>\n                set_engine(\"earth\")            |>\n                set_mode(\"regression\")\n\n\nlibrary(bonsai)\nrf_model <-   rand_forest(mtry  = tune(), \n                           min_n  = tune(), trees = 100)            |>\n              set_engine(\"ranger\")    |>\n              set_mode(\"regression\")\n\n\n\n\nlgbm_model <-   boost_tree(learn_rate = tune(), stop_iter = tune(),\n                            trees = 100) %>%\n                set_engine(\"lightgbm\", num_leaves = tune()) %>%\n                set_mode(\"regression\")\n```\n:::\n\n\n## Definicion de los flujos de trabajo\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmars_wflow   <- workflow(rec.option, mars_model)\nrf_wflow     <- workflow(rec.option, rf_model)\nlgbm_wflow   <- workflow(rec.option, lgbm_model)\n```\n:::\n\n\nLuego procedemos a ajustar el modelo planteado sobre los 'folds' creados, mediante la metodologia de validacion cruzada de manera que se busca optimizar los hiperparametros de los modelos planteados\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nmars_time_grid <- system.time(\n                  mars_res_grid <- tune_grid(mars_wflow, option_folds, grid = 5)\n)\n\n\nset.seed(123)\nrf_time_grid<- system.time(\n                  rf_res_grid <- tune_grid(rf_wflow, option_folds, grid = 5)\n)\n\n\nset.seed(123)\nlgbm_time_grid <- system.time(\n                  lgbm_res_grid <- tune_grid(lgbm_wflow, option_folds, grid = 5)\n)\n```\n:::\n\n\n## Evaluacion del Mejor modelo\n\nProcedemos a seleccionar el mejor modelo empleando para ello la metrica de error de la raiz cuadrada media estandarizada o rsme( por sus siglas en ingles )\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrf_rmse       <- rf_res_grid %>%\n                 select_best(\"rmse\", maximize = FALSE)\n\nlgbm_rmse     <- lgbm_res_grid %>%\n                 select_best(\"rmse\", maximize = FALSE)\n\nmars_rmse     <- mars_res_grid %>%\n                 select_best(\"rmse\", maximize = FALSE)\n\n\n\n\nfinal_mars <- finalize_workflow(\n              mars_wflow,\n              mars_rmse\n)\n\nfinal_rf <- finalize_workflow(\n              rf_wflow,\n              rf_rmse\n)\n\nfinal_lgbm <- finalize_workflow(\n              lgbm_wflow,\n              lgbm_rmse\n)\n```\n:::\n\n\n### Metricas de error de entrenamiento del mejor modelo\n\nFinalmente reorganizamos los resultados de las metricas de error para facilitar la seleccion del mejor modelo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm_mars_db  <- last_fit(\n              final_mars,\n              split\n              ) %>%\n              collect_metrics() %>% \n              mutate(.model =\"mars\")\n\n\nm_rf_db  <- last_fit(\n            final_rf,\n            split\n            ) %>%\n            collect_metrics() %>% \n              mutate(.model =\"Random.Forest\")\n\nm_lgbm_db  <- last_fit(\n              final_lgbm,\n              split\n              ) %>%\n              collect_metrics()%>% \n              mutate(.model =\"Light.gbm\")\n\n\nmtrcs_db   <-rbind(m_mars_db,\n                   m_rf_db,\n                   m_lgbm_db)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmtrcs_db                                                    |> \nselect(.metric,.estimate,.model)                            |> \npivot_wider(names_from = .metric,values_from =  .estimate)  |> \ngt()                                                        |>\ntab_header(\n    title = md(\"**Metricas de error**\"),\n    subtitle = \"Pricing opciones\"\n  )                                                         |>\n  tab_options(\n    table.background.color = \"white\",\n    column_labels.background.color = \"white\",\n    table.font.size = px(15),\n    column_labels.font.size = px(17),\n    row.striping.background_color = \"gray\",\n    heading.align = \"center\",\n    heading.title.font.size = px(20)\n  ) %>% \n  opt_row_striping() \n```\n:::\n\n\n### Comparacion visual : error de prediccion\n\nPreprocesamiento del error de prediccion de cada modelo\n\n\n::: {.cell}\n\n```{.r .cell-code}\nout_of_sample_data <- testing(split)                  |>\n                      slice_sample(n = 10000)\n\ndim(out_of_sample_data)\n\npredictive_performance <- final_mars                  |>         # best workflow\n                          fit(data = training(split)) |>         # fitted with full training dataset\n                          predict(out_of_sample_data) |>           # predict \n                          rename(\"mars\" = .pred)      |> \n                          bind_cols(\n                              final_rf                      |>         \n                              fit(data = training(split))   |>         \n                              predict(out_of_sample_data)   |>            \n                              rename(\"Random.Forest\" = .pred) \n                            )                               |> \n                          bind_cols(\n                              final_rf                      |>         \n                              fit(data = training(split))   |>         \n                              predict(out_of_sample_data)   |>            \n                              rename(\"LGBM\" = .pred) \n                            )                               |>\n  bind_cols(out_of_sample_data)                             |>\n  pivot_longer(\"mars\":\"LGBM\", names_to = \"Model\")           |>\n    mutate(\n    moneyness = (S - K),\n    pricing_error = abs(value - black_scholes)\n  )\n```\n:::\n\n\nVisualizacion final del error de prediccion de los modelos anteriormente evaluados\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredictive_performance |>\n  ggplot(aes(\n    x = moneyness, \n    y = pricing_error, \n    color = Model,\n    linetype = Model\n    )) +\n  geom_jitter(alpha = 0.05) +\n  scale_color_viridis_d()+\n  geom_smooth(se = FALSE, method = \"gam\", formula = y ~ s(x, bs = \"cs\")) +\n  labs(\n    x = \"Moneyness (S - K)\", color = NULL,\n    y = \"Error de prediccion\",\n    title = \"Error de prediccion de modelos opciones de compra\",\n    linetype = NULL\n  )+theme_bw()+\n  theme(legend.position = \"bottom\",\n        plot.title = element_text(hjust = 0.5))\n```\n:::\n",
    "supporting": [
      "2021-06-10_ML_Options_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}